
&НаКлиенте
Процедура crm_ПрограммаЛояльностиПосле(Команда)
	
	ИспПл = ПроверитьВозможностьИспользованияПЛ();
	Если ИспПл = Ложь Тогда 
		ПоказатьПредупреждение(,"Чек уже пробит, откройте новый чек",);
	Иначе 
		ТаблицаТоваров = Объект.Товары;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Товары", ТаблицаТоваров);
		СтруктураПараметров.Вставить("КассаККМ", Объект.КассаККМ);
		СтруктураПараметров.Вставить("Организация", Объект.Организация);
		СтруктураПараметров.Вставить("ВидЦены", Объект.ВидЦены);
		СтруктураПараметров.Вставить("idЧека", Объект.crm_idЧека);
		СтруктураПараметров.Вставить("НомерТелефона", Объект.crm_Телефон);
		СтруктураПараметров.Вставить("Почта", Объект.crm_Почта);
		
		ОбработчикОповещения = Новый ОписаниеОповещения ("РассчитатьСкидкуПоПЛ",ЭтаФорма, СтруктураПараметров);
		ОткрытьФорму("ОбщаяФорма.crm_ВводНомераТелефона",СтруктураПараметров,,,,,ОбработчикОповещения);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция  ПроверитьВозможностьИспользованияПЛ()

	Если Объект.Статус = Перечисления.СтатусыЧековККМ.Пробит Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура crm_ПриОткрытииПосле(Отказ)

	ПЛ = crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("ИспользованиеПЛ");
	Если ПЛ = Истина и crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("ВыгружатьЧек") = Истина Тогда
		Элементы.ГруппаВерхняяКоманднаяПанель.ПодчиненныеЭлементы.ПрограммаЛояльности.Видимость = Истина;
	Иначе 
		Элементы.ГруппаВерхняяКоманднаяПанель.ПодчиненныеЭлементы.ПрограммаЛояльности.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСкидкуПоПЛ(РезультатОткрытияФормы, ДополнительныеПараметры) Экспорт 

	Если РезультатОткрытияФормы <> Неопределено Тогда 
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.КоличествоДляСписания) Тогда 
			Объект.crm_СписаноБонусов = РезультатОткрытияФормы.КоличествоДляСписания;
		КонецЕсли;
		
		Попытка
			Объект.crm_idЧека = РезультатОткрытияФормы.ИдЗаказа;
		Исключение
		КонецПопытки;
		
		Если ЗначениеЗаполнено(РезультатОткрытияФормы.НомерТелефона) Тогда 
			Объект.crm_Телефон = РезультатОткрытияФормы.НомерТелефона;
		КонецЕсли;
		
		ЗаменитьПартнера(РезультатОткрытияФормы); 
		
		Объект.crm_ПЛ = Истина;
		
		//тут мы уже выгрузили новый заказ в црм, нужно рассчитать предварительную скидку 
		ДанныеПЛ = Новый Структура;
		ДанныеПЛ.Вставить("IDКлиента", РезультатОткрытияФормы.IDКлиента);
		ДанныеПЛ.Вставить("ВидЦены", Объект.ВидЦены);
		СписокТоваров = Объект.Товары;
		
		Если Объект.crm_СписаноБонусов > 0 и ЗначениеЗаполнено(Объект.crm_idЧека) Тогда 
			Скидки = crm_RetailCRMОбщий.РассчитатьСкидкуПоПЛ(ДанныеПЛ, РезультатОткрытияФормы.Магазин, СписокТоваров, Объект.crm_СписаноБонусов); 
		
			РассчитатьСкидкуПоПЛНаСервере(РезультатОткрытияФормы, Скидки);

			ПересчитатьДокументНаКлиенте();
		
			//запрос на списание баллов
			crm_RetailCRMОбщий.ПрименитьБонусныеБаллы(РезультатОткрытияФормы.Магазин, Объект.crm_СписаноБонусов, Объект.crm_idЧека);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСкидкуПоПЛНаСервере(ДанныеПЛ, Скидки)Экспорт 
	
	ТаблицаТоваров = РеквизитФормыВЗначение("Объект.Товары");
	
	//ищем строку по тч товары по идентификатору строки, если найдем, то редактируем ее
	offers_id = crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("offers_id");
	
	Для Каждого стрТовар из Скидки.Товары Цикл
		//поиск такой строки в тч
		//поиск будет по id. Сделаем копию ТЧ товары и туда пропишем идентификатор
		//++ Работа с характеристиками
		xmlIdТовара = стрТовар[offers_id];
		
		Если crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("ИспользованиеХарактеристик") = Истина Тогда 
			СтруктураНоменклатуры		= УТ11_ВернутьНоменклатуру(xmlIdТовара);
			искХар						= СтруктураНоменклатуры.искХарактеристика;
			искНом 						= СтруктураНоменклатуры.искНоменклатура;
		Иначе 
			//ИдентификаторТовара
			ИдентифТовара = crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("ИдентификаторТовара");
			Если ИдентифТовара = "Код" Тогда
				искНом	= Справочники.Номенклатура.найтиПоКоду(xmlIdТовара);
			ИначеЕсли ИдентифТовара = "Артикул" Тогда
				искНом	= Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", xmlIdТовара);
			ИначеЕсли ИдентифТовара = "GUID" Тогда
				уид 	= Новый УникальныйИдентификатор(xmlIdТовара);
				искНом	= Справочники.Номенклатура.ПолучитьСсылку(уид);	
			КонецЕсли;
			
		КонецЕсли;
		//-- Работа с характеристиками
		
		ИскСтрокиТЗ = ТаблицаТоваров.НайтиСтроки(Новый Структура("Номенклатура", искНом));
		Если ИскСтрокиТЗ <> Неопределено Тогда 
			Для Каждого ИскСтрТЗ из ИскСтрокиТЗ Цикл
				ИскСтрТЗ.СуммаРучнойСкидки = стрТовар["КоличествоСписанныхБонусов"];
				ИскСтрТЗ.Сумма = ИскСтрТЗ.Сумма - ИскСтрТЗ.СуммаРучнойСкидки;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаменитьПартнера(ДанныеПЛ)Экспорт 
	
	Если Объект.Партнер = Справочники.Партнеры.РозничныйПокупатель Тогда 
		//нужно создать нормального или привязать, если он есть
		Партнер = crm_RetailCRMОбработка.УТ11_ВернутьПартнераПоID(Формат(Число(ДанныеПЛ.IDКлиента),"ЧГ=0"), "customer");
		//если нашли партнера, пишем его в чек
		Если ЗначениеЗаполнено(Партнер) Тогда
			Объект.Партнер = Партнер;
		Иначе 
			//Создавали партнера ранее, поэтому пробуем найти по телефону
			Партнер = crm_RetailCRMОбработка.УТ11_ВернутьКонтрагентаПоТелефону_Почте("", ДанныеПЛ.НомерТелефона);
			Если ЗначениеЗаполнено(Партнер) Тогда
				Объект.Партнер = Партнер;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Функция УдалитьЛишниеСимволы(Телефон)
	
	ТелефонБезЛишнихСимволов = "";
	
	Счетчик = 1; 	
	Пока Счетчик <= СтрДлина(Телефон) Цикл
		Символ = Сред(Телефон,Счетчик,1);
		Если КодСимвола(Символ) >= 48 и КодСимвола(Символ) <= 57 Тогда 
			ТелефонБезЛишнихСимволов = ТелефонБезЛишнихСимволов + Символ;			
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Возврат ТелефонБезЛишнихСимволов;	
	
КонецФункции

&НаСервере
Функция УТ11_ВернутьНоменклатуру(xmlIdТовара) Экспорт 
	
	искХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	Если crm_RetailCRMПовтИсп.ПолучитьЗначениеКонстанты("GUIDОрганизации") = Истина Тогда 
		GUIDОрганизации = Истина;
	Иначе 
		GUIDОрганизации = Ложь;
	КонецЕсли;
	
	//если нет # то это товар без характеристики
	Индекс = Найти(xmlIdТовара, "#");
	
	//сначала отбрасываем гуид организации, затем по старой схеме
	Если GUIDОрганизации Тогда 
		xmlIdТовара = Сред(xmlIdТовара,(Индекс+1));
	КонецЕсли;
	
	Инд = Найти(xmlIdТовара, "#");
	Если Инд = 0 Тогда
		Попытка
			уид 				= Новый УникальныйИдентификатор(xmlIdТовара);
			искНоменклатура		= Справочники.Номенклатура.ПолучитьСсылку(уид);
		Исключение
		КонецПопытки;
	Иначе 
		МассивЗначений = crm_RetailCRMОбщий.РазложитьСтрокуВМассивПодстрок(xmlIdТовара, "#");
		
		Если МассивЗначений.Количество() < 2 Тогда
			Сообщить("Не возможно найти товар по id: " + xmlIdТовара);
			Возврат искХарактеристика;
		КонецЕсли;
		
		Попытка
			уид 				= Новый УникальныйИдентификатор(МассивЗначений[0]);
			искНоменклатура		= Справочники.Номенклатура.ПолучитьСсылку(уид);
			уид2 				= Новый УникальныйИдентификатор(МассивЗначений[1]);
			искХарактеристика	= Справочники.ХарактеристикиНоменклатуры.ПолучитьСсылку(уид2);
			
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("искХарактеристика", 		искХарактеристика);
	СтруктураВозврата.Вставить("искНоменклатура", 			искНоменклатура);
	
	Возврат СтруктураВозврата;
	
КонецФункции
